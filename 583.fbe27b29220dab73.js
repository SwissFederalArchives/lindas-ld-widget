"use strict";(self.webpackChunkld_widget=self.webpackChunkld_widget||[]).push([[583],{2583:(w,p,s)=>{s.r(p),s.d(p,{ConfigComponent:()=>T});var h=s(6814),r=s(95),g=s(9862),c=s(8645),f=s(9360),m=s(8251),y=s(4829),Z=s(2420),t=s(4946);function v(i,a){if(1&i&&(t.TgZ(0,"div")(1,"a",8),t._uU(2),t.qZA()()),2&i){const o=t.oxw();t.xp6(1),t.Q6J("href",o.link,t.LSH),t.xp6(1),t.Oqu(o.link)}}function C(i,a){if(1&i&&(t.TgZ(0,"div")(1,"p"),t._uU(2),t.qZA()()),2&i){const o=t.oxw();t.xp6(2),t.Oqu(o.link)}}let L=(()=>{var i;class a{constructor(){this.query="",this.endpoint="",this.buttonLabel="",this.ldWidgetUrl=window.location.href.split("?")[0]?.replace("config","")??"",this.link="",this.isLinkValid=!1,this.sampleQuery=A,this.sampleEndpoint=U,this.sampleValues=b,this.formControlNames=[],this.destroy$=new c.x,this.widgetConfigForm=new r.cw({endpoint:new r.NI(this.endpoint,r.kI.required),query:new r.NI(this.query,r.kI.required),buttonLabel:new r.NI(this.buttonLabel)})}ngOnInit(){this.widgetConfigForm.valueChanges.pipe(function q(i){return(0,f.e)((a,o)=>{(0,y.Xf)(i).subscribe((0,m.x)(o,()=>o.complete(),Z.Z)),!o.closed&&a.subscribe(o)})}(this.destroy$)).subscribe(e=>{this._createLinkIfValid(e.endpoint??"",e.query??"",e.buttonLabel??"")})}_createLinkIfValid(e,n,u){if(this.isLinkValid=this._checkIfLinkValid(e,n),this.isLinkValid){let d="";u.length>0&&(d=`&b=${encodeURIComponent(u)}`),this.link=`${this.ldWidgetUrl}?e=${encodeURIComponent(e)}&q=${encodeURIComponent(n)}${d}`}else this.link=""}ngOnChanges(e){e.query?.currentValue&&(this.query=e.query?.currentValue.trim(),this.widgetConfigForm.get("query")?.setValue(this.query)),e.endpoint?.currentValue&&(this.endpoint=e.endpoint.currentValue.trim(),this.widgetConfigForm.get("endpoint")?.setValue(this.endpoint)),this._createLinkIfValid(this.endpoint,this.query,this.buttonLabel)}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}_checkIfLinkValid(e,n){return this._checkEndpoint(e)&&this._checkQuery(n)}_checkEndpoint(e){let n;try{n=new URL(e)}catch{return!1}return"http:"===n.protocol||"https:"===n.protocol}_checkQuery(e){return e.includes("?varBind")}}return(i=a).\u0275fac=function(e){return new(e||i)},i.\u0275cmp=t.Xpm({type:i,selectors:[["app-ld-widget-config"]],inputs:{query:"query",endpoint:"endpoint",buttonLabel:"buttonLabel"},standalone:!0,features:[t.TTD,t.jDz],decls:49,vars:7,consts:[[4,"ngIf"],[3,"formGroup"],["for","endpoint"],["id","endpoint","type","text","formControlName","endpoint",2,"margin-right","4px"],["for","query"],["id","query","rows","30","cols","150","formControlName","query",2,"margin-right","4px"],["id","query","formControlName","buttonLabel",2,"margin-right","4px"],[2,"color","red"],["target","_blank",3,"href"]],template:function(e,n){1&e&&(t.TgZ(0,"h1"),t._uU(1,"Linked Data Widget: Link Configurator"),t.qZA(),t.TgZ(2,"div")(3,"p"),t._uU(4,"Test link"),t.qZA(),t.YNc(5,v,3,2,"div",0),t.YNc(6,C,3,1,"div",0),t.qZA(),t._UZ(7,"br")(8,"br"),t.TgZ(9,"form",1)(10,"div")(11,"label",2),t._uU(12,"SPARQL Endpoint"),t.qZA(),t._UZ(13,"input",3),t.qZA(),t.TgZ(14,"div")(15,"label",4),t._uU(16,"SPARQL Query"),t.qZA(),t._UZ(17,"textarea",5),t.qZA(),t.TgZ(18,"div")(19,"label",4),t._uU(20,"Button Label (optional)"),t.qZA(),t._UZ(21,"input",6),t.qZA()(),t.TgZ(22,"div")(23,"h2"),t._uU(24,"Sample"),t.qZA(),t.TgZ(25,"h3"),t._uU(26,"Sample Endpoint"),t.qZA(),t.TgZ(27,"pre"),t._uU(28),t.qZA(),t.TgZ(29,"h3"),t._uU(30,"Sample query"),t.qZA(),t.TgZ(31,"pre"),t._uU(32),t.qZA()(),t.TgZ(33,"div")(34,"h2"),t._uU(35,"How does that work?"),t.qZA(),t.TgZ(36,"p"),t._uU(37," The important variable is "),t.TgZ(38,"span",7),t._uU(39,"?varBind"),t.qZA(),t._uU(40,". The widget will show an input asking for a value. The variable "),t.TgZ(41,"span",7),t._uU(42,"?varBind"),t.qZA(),t._uU(43," will be bound the the value of this input filed. It will just append a VALUES expression to the SPARQL Query. Imagine your input is "),t.TgZ(44,"span",7),t._uU(45,"'990000002998969'"),t.qZA(),t._uU(46," this will lead to the following query. "),t.qZA(),t.TgZ(47,"pre"),t._uU(48),t.qZA()()),2&e&&(t.xp6(5),t.Q6J("ngIf",n.isLinkValid),t.xp6(1),t.Q6J("ngIf",!n.isLinkValid),t.xp6(3),t.Q6J("formGroup",n.widgetConfigForm),t.xp6(19),t.Oqu(n.sampleEndpoint),t.xp6(4),t.Oqu(n.sampleQuery),t.xp6(16),t.AsE("",n.sampleQuery,"",n.sampleValues,""))},dependencies:[r.u5,r._Y,r.Fj,r.JJ,r.JL,r.UX,r.sg,r.u,g.JF,h.O5]}),a})();const U="https://lindas.admin.ch/query",A='\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT ?resultString FROM <https://lindas.admin.ch/fsvo/rabies> WHERE {\n  ?s <https://agriculture.ld.admin.ch/foen/rabies/dimension/identifier> ?varBind;\n  \t <https://agriculture.ld.admin.ch/foen/rabies/dimension/quantitativeresult> ?value ;\n     <https://agriculture.ld.admin.ch/foen/rabies/dimension/result> ?result ;\n     <https://agriculture.ld.admin.ch/foen/rabies/dimension/date> ?date;\n  \t <https://agriculture.ld.admin.ch/foen/rabies/dimension/unitcode> ?unit .\n     BIND ( IF ( ?result = <https://agriculture.ld.admin.ch/foen/rabies/dimension/result/positiv>, "Sufficient", "Insufficient" ) AS ?v )\n  \t BIND(CONCAT("Microchip number: ",?varBind, " | ", ?v, " | ",  "Quantitative Result: ", str(?value), " ", ?unit, " | Date of blood sampling: ", str(?date))  AS ?resultString ) \n} ORDER BY ?date LIMIT 1\n',b="VALUES ?varBind { '990000002998969' }";var l=s(4670);let T=(()=>{var i;class a{constructor(e,n){this.router=e,this.route=n,this.endpoint="",this.sparqlQuery=""}ngOnInit(){this.route.queryParamMap.subscribe(e=>{this.endpoint=e.get("e")??"",this.sparqlQuery=e.get("q")??""})}}return(i=a).\u0275fac=function(e){return new(e||i)(t.Y36(l.F0),t.Y36(l.gz))},i.\u0275cmp=t.Xpm({type:i,selectors:[["ng-component"]],standalone:!0,features:[t.jDz],decls:1,vars:2,consts:[[3,"endpoint","query"]],template:function(e,n){1&e&&t._UZ(0,"app-ld-widget-config",0),2&e&&t.Q6J("endpoint",n.endpoint)("query",n.sparqlQuery)},dependencies:[L,l.Bz]}),a})()}}]);